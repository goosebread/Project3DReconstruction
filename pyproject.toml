[tool.poetry]
name = "project-3d-reconstruction"
version = "0.1.0-dev"
description = ""
authors = [
    "Nathan McGuire <mcguire.n@northeastern.edu>",
    "Brian Schubert <schubert.b@northeastern.edu>",
    "Alex Yeh <yeh.al@northeastern.edu>"
]
# TODO: reorganize into single package?
packages = [
    { from = "src", include = "project_3d_reconstruction" }  # TODO: simpler package name?
]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
opencv-python = "^4.9.0.80"
tqdm = "^4.66.2"
matplotlib = "^3.8.3"
pyrender = "^0.1.45"
trimesh = "^4.2.0"

[tool.poetry.group.dev.dependencies]
black = { extras = ["jupyter"], version = "^24.2.0" }
isort = "^5.13.2"
mypy = "^1.8.0"
pre-commit = "^3.6.2"
ruff = "^0.3.3"
pytest = "^8.0.2"

[tool.poetry.group.nb.dependencies]
jupyter = "^1.0.0"
nbqa = "^1.8.3"
pillow = "^10.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# isort config.
[tool.isort]
profile = "black"

# mypy config.
[tool.mypy]
strict = true
plugins = ["numpy.typing.mypy_plugin"]
# Controls which files mypy should type-checked when no files are specified on the
# command line.
# Specified as files (instead of as a package) so that this works inside the mypy
# pre-commit hook (where this project won't be installed in the same enviroment that
# mypy is running in).
files = ["src", "scripts"]

[[tool.mypy.overrides]]
module = ["matplotlib.*", "mpl_toolkits.*"]
ignore_missing_imports = true

# pytest config
[tool.pytest.ini_options]
addopts = "--doctest-modules"
testpaths = ["src", "tests"]

# ruff config.
[tool.ruff]
line-length = 88  # match black
target-version = "py312"
fix = true
extend-include = ["*.ipynb"]
src = ["src"]

# ruff lint settings.
[tool.ruff.lint]
# Select active lint rules.
# https://docs.astral.sh/ruff/rules/
select = [
    # pyflakes
    "F",
    # pycodestyle
    "E", "W",
    # isort
    "I",
    # pep8-naming
    "N",
    # pyupgrade
    "UP",
    # flake8-2020
    "YTT",
    # flake-8-blind-except
    "BLE",
    # flake8-boolean-trap
    "FBT",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-executable
    "EXE",
    # flake8-future-annotations
    "FA",
    # flake8-import-conventions
    "ICN",
    # flake8-pie
    "PIE",
    # flake8-pyi
    "PYI",
    # flake8-pytest-style
    "PT",
    # flake8-quotes
    "Q",
    # flake8-return
    "RET",
    # flake8-simplify
    "SIM",
    # flake8-tidy-imports
    "TID",
    # flake8-type-checking
    "TCH",
    # flake8-unused-arguments
    "ARG",
    # flake8-use-pathlib
    "PTH",
    # pylint
    "PL",
    # flynt
    "FLY",
    # NumPy-specific rules
    "NPY",
    # Perflint
    "PERF",
    # Ruff-specific rules
    "RUF",
]

unfixable = [
    # Unused noqa
    "RUF100",
    # Unused import
    "F401",
]
